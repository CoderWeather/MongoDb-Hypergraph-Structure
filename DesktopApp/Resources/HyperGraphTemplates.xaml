<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:HyperGraphSharp.Controls;assembly=HyperGraphSharp"
                    xmlns:graphModels="clr-namespace:HyperGraphSharp.Models;assembly=HyperGraphSharp"
                    xmlns:attachedBehaviors="clr-namespace:GraphSharp.WPFExtensions.AttachedBehaviors;assembly=GraphSharp.Wpf"
                    xmlns:converters="clr-namespace:HyperGraphSharp.Converters;assembly=HyperGraphSharp"
                    xmlns:zoom="clr-namespace:GraphSharp.WPFExtensions.Zoom;assembly=GraphSharp.Wpf"
                    xmlns:converters1="clr-namespace:GraphSharp.Converters;assembly=GraphSharp.Wpf">

	<converters:EdgeRouteToPathConverter x:Key="RouteToPathConverter" />
	<converters1:EqualityToBooleanConverter x:Key="EqualityConverter" />

	<DataTemplate DataType="{x:Type graphModels:Vertex}">
		<TextBlock Text="{Binding Path=Data, Mode=OneWay, FallbackValue=Id}"
		           TextAlignment="Justify"
		           FontSize="15"
		           Padding="2,1,2,1" />
	</DataTemplate>

	<!-- VERTEX CONTROL -->
	<Style TargetType="{x:Type controls:VertexControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:VertexControl}">
					<Border Background="{TemplateBinding Background}"
					        BorderBrush="{TemplateBinding BorderBrush}"
					        BorderThickness="{TemplateBinding BorderThickness}"
					        ToolTip="{TemplateBinding ToolTip}"
					        CornerRadius="10,10,10,10"
					        Padding="{TemplateBinding Padding}">
						<ContentPresenter Content="{TemplateBinding Vertex}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<!-- <Setter Property="attachedBehaviors:DragBehavior.IsDragEnabled" -->
		<!--         Value="True" /> -->
		<!-- <Setter Property="attachedBehaviors:DragBehavior.X"> -->
		<!-- 	<Setter.Value> -->
		<!-- 		<Binding RelativeSource="{RelativeSource Self}" -->
		<!-- 		         Path="(controls:HyperGraphCanvas.X)" -->
		<!-- 		         Mode="TwoWay" /> -->
		<!-- 	</Setter.Value> -->
		<!-- </Setter> -->
		<!-- <Setter Property="attachedBehaviors:DragBehavior.Y"> -->
		<!-- 	<Setter.Value> -->
		<!-- 		<Binding RelativeSource="{RelativeSource Self}" -->
		<!-- 		         Path="(controls:HyperGraphCanvas.Y)" -->
		<!-- 		         Mode="TwoWay" /> -->
		<!-- 	</Setter.Value> -->
		<!-- </Setter> -->
		<Setter Property="Background"
		        Value="#5DD35E" />
		<Setter Property="BorderThickness"
		        Value="1" />
		<Setter Property="BorderBrush"
		        Value="Transparent" />
	</Style>

	<!-- EDGE CONTROL -->
	<Style TargetType="{x:Type controls:HyperEdgeControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:HyperEdgeControl}">
					<Canvas>
						<Path Stroke="{TemplateBinding Foreground}"
						      StrokeThickness="{TemplateBinding StrokeThickness}"
						      MinWidth="1"
						      MinHeight="1"
						      ToolTip="{TemplateBinding ToolTip}"
						      Opacity="{TemplateBinding Opacity}"
						      x:Name="edgePath">
							<Path.Data>
								<PathGeometry>
									<PathGeometry.Figures>
										<MultiBinding Converter="{StaticResource RouteToPathConverter}">
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
											         Path="Vertices" />
										</MultiBinding>
									</PathGeometry.Figures>
								</PathGeometry>
							</Path.Data>
						</Path>
						<controls:HyperEdgeContentPresenter Content="{TemplateBinding HyperEdge}"
						                                    TextBlock.FontSize="20"
						                                    TextBlock.Foreground="Black"
						                                    Opacity="1"
						                                    Margin="-5, 0, 0, 0"
						                                    Width="Auto"
						                                    Height="Auto" />
					</Canvas>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="MinWidth"
		        Value="1" />
		<Setter Property="MinHeight"
		        Value="1" />
		<Setter Property="Background"
		        Value="Red" />
		<Setter Property="Foreground"
		        Value="DimGray" />
		<Setter Property="Opacity"
		        Value="0.5" />
	</Style>

	<!-- ZOOM CONTROL -->
	<Style TargetType="{x:Type zoom:ZoomControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type zoom:ZoomControl}">
					<Grid>
						<Border BorderBrush="{TemplateBinding BorderBrush}"
						        BorderThickness="{TemplateBinding BorderThickness}"
						        Background="{TemplateBinding Background}"
						        ClipToBounds="{TemplateBinding ClipToBounds}">
							<zoom:ZoomContentPresenter x:Name="PART_Presenter"
							                           ClipToBounds="False" />
						</Border>
						<Border Padding="5"
						        Margin="5"
						        CornerRadius="5"
						        Background="#88C0C0C0"
						        Width="275"
						        Height="40"
						        VerticalAlignment="Top"
						        HorizontalAlignment="Left">
							<StackPanel Orientation="Horizontal">
								<ToggleButton Content="1:1"
								              Width="55">
									<ToggleButton.IsChecked>
										<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Mode"
										         Converter="{StaticResource EqualityConverter}"
										         ConverterParameter="{x:Static zoom:ZoomControlModes.Original}" />
									</ToggleButton.IsChecked>
								</ToggleButton>
								<ToggleButton Content="Fill"
								              Width="55">
									<ToggleButton.IsChecked>
										<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Mode"
										         Converter="{StaticResource EqualityConverter}"
										         ConverterParameter="{x:Static zoom:ZoomControlModes.Fill}" />
									</ToggleButton.IsChecked>
								</ToggleButton>
								<ToggleButton Content="Custom"
								              Width="55">
									<ToggleButton.IsChecked>
										<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Mode"
										         Converter="{StaticResource EqualityConverter}"
										         ConverterParameter="{x:Static zoom:ZoomControlModes.Custom}" />
									</ToggleButton.IsChecked>
								</ToggleButton>
								<TextBlock
									Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Zoom,StringFormat='Zoom: {0:P2}'}"
									VerticalAlignment="Center"
									Margin="5,0,0,0" />
							</StackPanel>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="Background"
		        Value="White" />
		<Setter Property="ClipToBounds"
		        Value="True" />

		<Style.Triggers>
			<Trigger Property="ModifierMode"
			         Value="Pan">
				<Setter Property="Cursor"
				        Value="SizeAll" />
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>